/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/users/componentsPage/page",{

/***/ "(app-pages-browser)/./components/Searchbar/placeholdercomb.tsx":
/*!**************************************************!*\
  !*** ./components/Searchbar/placeholdercomb.tsx ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// \"use client\";\n// import { PlaceholdersAndVanishInput } from \"./placeholders-and-vanish-input\";\n// export function PlaceholdersAndVanishInputDemo() {\n//   const placeholders = [\n//     \"What's the first rule of Fight Club?\",\n//     \"Who is Tyler Durden?\",\n//     \"Where is Andrew Laeddis Hiding?\",\n//     \"Write a Javascript method to reverse a string\",\n//     \"How to assemble your own PC?\",\n//   ];\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     console.log(e.target.value);\n//   };\n//   const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n//     e.preventDefault();\n//     console.log(\"submitted\");\n//   };\n//   return (\n//     <div className=\"h-[40rem] flex flex-col justify-center  items-center px-4\">\n//       <h2 className=\"mb-10 sm:mb-20 text-xl text-center sm:text-5xl metallic-text\">\n//         Ask Aceternity UI Anything\n//       </h2>\n//       <PlaceholdersAndVanishInput\n//         placeholders={placeholders}\n//         onChange={handleChange}\n//         onSubmit={onSubmit}\n//       />\n//     </div>\n//   );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvU2VhcmNoYmFyL3BsYWNlaG9sZGVyY29tYi50c3giLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBRWhCLGdGQUFnRjtBQUVoRixxREFBcUQ7QUFDckQsMkJBQTJCO0FBQzNCLDhDQUE4QztBQUM5Qyw4QkFBOEI7QUFDOUIseUNBQXlDO0FBQ3pDLHVEQUF1RDtBQUN2RCxzQ0FBc0M7QUFDdEMsT0FBTztBQUVQLHVFQUF1RTtBQUN2RSxtQ0FBbUM7QUFDbkMsT0FBTztBQUNQLGdFQUFnRTtBQUNoRSwwQkFBMEI7QUFDMUIsZ0NBQWdDO0FBQ2hDLE9BQU87QUFDUCxhQUFhO0FBQ2Isa0ZBQWtGO0FBQ2xGLHNGQUFzRjtBQUN0RixxQ0FBcUM7QUFDckMsY0FBYztBQUNkLG9DQUFvQztBQUNwQyxzQ0FBc0M7QUFDdEMsa0NBQWtDO0FBQ2xDLDhCQUE4QjtBQUM5QixXQUFXO0FBQ1gsYUFBYTtBQUNiLE9BQU87QUFDUCxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvU2VhcmNoYmFyL3BsYWNlaG9sZGVyY29tYi50c3g/YTMwYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBcInVzZSBjbGllbnRcIjtcblxuLy8gaW1wb3J0IHsgUGxhY2Vob2xkZXJzQW5kVmFuaXNoSW5wdXQgfSBmcm9tIFwiLi9wbGFjZWhvbGRlcnMtYW5kLXZhbmlzaC1pbnB1dFwiO1xuXG4vLyBleHBvcnQgZnVuY3Rpb24gUGxhY2Vob2xkZXJzQW5kVmFuaXNoSW5wdXREZW1vKCkge1xuLy8gICBjb25zdCBwbGFjZWhvbGRlcnMgPSBbXG4vLyAgICAgXCJXaGF0J3MgdGhlIGZpcnN0IHJ1bGUgb2YgRmlnaHQgQ2x1Yj9cIixcbi8vICAgICBcIldobyBpcyBUeWxlciBEdXJkZW4/XCIsXG4vLyAgICAgXCJXaGVyZSBpcyBBbmRyZXcgTGFlZGRpcyBIaWRpbmc/XCIsXG4vLyAgICAgXCJXcml0ZSBhIEphdmFzY3JpcHQgbWV0aG9kIHRvIHJldmVyc2UgYSBzdHJpbmdcIixcbi8vICAgICBcIkhvdyB0byBhc3NlbWJsZSB5b3VyIG93biBQQz9cIixcbi8vICAgXTtcblxuLy8gICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAoZTogUmVhY3QuQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHtcbi8vICAgICBjb25zb2xlLmxvZyhlLnRhcmdldC52YWx1ZSk7XG4vLyAgIH07XG4vLyAgIGNvbnN0IG9uU3VibWl0ID0gKGU6IFJlYWN0LkZvcm1FdmVudDxIVE1MRm9ybUVsZW1lbnQ+KSA9PiB7XG4vLyAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuLy8gICAgIGNvbnNvbGUubG9nKFwic3VibWl0dGVkXCIpO1xuLy8gICB9O1xuLy8gICByZXR1cm4gKFxuLy8gICAgIDxkaXYgY2xhc3NOYW1lPVwiaC1bNDByZW1dIGZsZXggZmxleC1jb2wganVzdGlmeS1jZW50ZXIgIGl0ZW1zLWNlbnRlciBweC00XCI+XG4vLyAgICAgICA8aDIgY2xhc3NOYW1lPVwibWItMTAgc206bWItMjAgdGV4dC14bCB0ZXh0LWNlbnRlciBzbTp0ZXh0LTV4bCBtZXRhbGxpYy10ZXh0XCI+XG4vLyAgICAgICAgIEFzayBBY2V0ZXJuaXR5IFVJIEFueXRoaW5nXG4vLyAgICAgICA8L2gyPlxuLy8gICAgICAgPFBsYWNlaG9sZGVyc0FuZFZhbmlzaElucHV0XG4vLyAgICAgICAgIHBsYWNlaG9sZGVycz17cGxhY2Vob2xkZXJzfVxuLy8gICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuLy8gICAgICAgICBvblN1Ym1pdD17b25TdWJtaXR9XG4vLyAgICAgICAvPlxuLy8gICAgIDwvZGl2PlxuLy8gICApO1xuLy8gfVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/Searchbar/placeholdercomb.tsx\n"));

/***/ })

});